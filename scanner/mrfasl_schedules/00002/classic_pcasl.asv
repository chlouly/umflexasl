TR = 5

pcld = 1.8; 
pcpld = 1.8;

p1_ld = 0.032;
p1_pld = 0;

p2_ld = 0.032;
p2_pld = 0;

ro_time = 0.04*8;

d0 = TR - pcld - pcpld - p1_ld - p1_pld - p2_ld - p2_pld - ro_time
Nframes = 30;

total_scantime = 0;

deadtime = ones(Nframes,1)*d0;
total_scantime = total_scantime + sum(deadtime);

pcasl_type = ones(Nframes,1);
pcasl_type(1:2:end) = 0;
%pcasl_type(2:3:end) = -1;

pcasl_duration = ones(Nframes,1)*pcld;
total_scantime = total_scantime + sum(pcasl_duration);

pcasl_pld = ones(Nframes,1)*pcpld;
total_scantime = total_scantime + sum(pcasl_pld);

p1_type = ones(Nframes,1);
p1_type(1:3:end) = 0;
p1_type(2:3:end) = -1;
p1_pld = ones(Nframes,1)*0.2;
total_scantime = total_scantime + sum(p1_ld);
total_scantime = total_scantime + sum(p1_pld);
total_scantime = total_scantime + sum(p2_ld);
total_scantime = total_scantime + sum(p2_pld);


p2_type = ones(Nframes,1);
p2_type(1:3:end) = 0;
p2_type(2:3:end) = -1;
p2_pld = ones(Nframes,1)*0.2;
total_scantime = total_scantime + sum(p2_pld);

schedule = [deadtime pcasl_type pcasl_duration pcasl_pld p1_type p1_pld p2_type p2_pld]

save mrf_schedule.txt schedule -ascii

total_scantime = total_scantime + ro_time;
